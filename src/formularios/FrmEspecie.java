/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import Entidades.Empleado;
import Entidades.Especie;
import Entidades.Habitat;
import implementaciones.DAOSFactory;
import implementaciones.HabitatDAO;
import interfaces.IFachada;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;
import validores.Validadores;
/**
 *
 * @author Jorge
 */
public class FrmEspecie extends javax.swing.JFrame {

    IFachada fachada = DAOSFactory.crearFachada();
    
    
    List<String> listaHabitatsAgregados = new ArrayList<>();
    List<Empleado> listaCuidadoresAgregados = new ArrayList<>();
    Validadores validador = new Validadores();
    
    /**
     * Creates new form FrmEspecie
     */
    public FrmEspecie() {
        initComponents();
        llenarTablaHabitats();
        llenarTablaCuidadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreVulgarEspecie = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtNombreCientificoEspecie = new javax.swing.JTextField();
        Direccion1 = new javax.swing.JLabel();
        btnLimpiarCampos = new javax.swing.JButton();
        btnContinuar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHabitatsRegistrados = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblEspecieHabitats = new javax.swing.JTable();
        btnAgregarHabitatEspecie = new javax.swing.JButton();
        btnRemoverHabitat = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCuidadoresRegistrados = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCuidadoresAgregados = new javax.swing.JTable();
        btnRemoverCuidador = new javax.swing.JButton();
        btnAgregarCuidador = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(142, 202, 230));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(142, 202, 230));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Descripcion de la especie:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        txtNombreVulgarEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreVulgarEspecieActionPerformed(evt);
            }
        });
        jPanel2.add(txtNombreVulgarEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 56, 201, -1));

        btnVolver.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel2.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Nombre Cientifico:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 109, -1, -1));
        jPanel2.add(txtNombreCientificoEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 109, 201, -1));

        Direccion1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Direccion1.setForeground(new java.awt.Color(0, 0, 0));
        Direccion1.setText("REGISTRO");
        jPanel2.add(Direccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        btnLimpiarCampos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnLimpiarCampos.setText("Limpiar Campos");
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiarCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, -1, -1));

        btnContinuar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnContinuar.setText("Continuar");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });
        jPanel2.add(btnContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 350, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombre Vulgar:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 56, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Cuidadores:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, -1));

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 370, 130));

        tblHabitatsRegistrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Habitats Registrados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblHabitatsRegistrados);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 230, 210));

        tblEspecieHabitats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Habitats Relacionados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblEspecieHabitats);
        if (tblEspecieHabitats.getColumnModel().getColumnCount() > 0) {
            tblEspecieHabitats.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 230, 210));

        btnAgregarHabitatEspecie.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAgregarHabitatEspecie.setText("AÃ±dir Habitat");
        btnAgregarHabitatEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHabitatEspecieActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregarHabitatEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 290, -1, -1));

        btnRemoverHabitat.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRemoverHabitat.setText("Remover Habitat");
        btnRemoverHabitat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverHabitatActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemoverHabitat, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, -1, -1));

        tblCuidadoresRegistrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Cuidador", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCuidadoresRegistrados);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 70, 230, 210));

        tblCuidadoresAgregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Cuidador", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblCuidadoresAgregados);
        if (tblCuidadoresAgregados.getColumnModel().getColumnCount() > 0) {
            tblCuidadoresAgregados.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 70, 230, 210));

        btnRemoverCuidador.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRemoverCuidador.setText("Remover Cuidador");
        btnRemoverCuidador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverCuidadorActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemoverCuidador, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 290, -1, -1));

        btnAgregarCuidador.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAgregarCuidador.setText("AÃ±adir Cuidador");
        btnAgregarCuidador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCuidadorActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregarCuidador, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 290, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Habitats:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1480, 390));

        jLabel1.setBackground(new java.awt.Color(2, 62, 138));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("              ESPECIE  ");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        FrmPrincipal main = new FrmPrincipal();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    public void limpiarCampos(){
        txtDescripcion.setText("");
        txtNombreCientificoEspecie.setText("");
        txtNombreVulgarEspecie.setText("");
        DefaultTableModel modelo = (DefaultTableModel) this.tblCuidadoresAgregados.getModel();
        modelo.setColumnCount(2);
        modelo.setRowCount(0);
        DefaultTableModel modelo2 = (DefaultTableModel) this.tblEspecieHabitats.getModel();
        listaHabitatsAgregados.clear();
        listaCuidadoresAgregados.clear();
        modelo2.setColumnCount(1);
        modelo2.setRowCount(0);
        llenarTablaHabitats();
        llenarTablaCuidadores();
    }
    
//    public boolean validaciones(){
//        if(validador.validaCadena(20, txtDescripcion.getText()) == false || 
//           validador.validaCadena(20, txtNombreCientificoEspecie.getText()) == false ||
//           validador.validaCadena(20, txtNombreVulgarEspecie.getText()) == false)
//        {
//           return false;
//        }else{
//            return true;
//        }
//    }
    
    public boolean agregarEspecie(){
        Especie especie = new Especie();
        if(tblEspecieHabitats.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Selecciona un campo de la tabla porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }else{
            if(txtNombreCientificoEspecie.getText().isEmpty()||txtNombreVulgarEspecie.getText().isEmpty()||txtDescripcion.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Campo nombre vacio...");
            return false;
            }else{
            
            especie.setNombreVulgar(txtNombreVulgarEspecie.getText());
            especie.setNombreCientifico(txtNombreCientificoEspecie.getText());
            especie.setDescripcion(txtDescripcion.getText());
            }
            listaHabitatsAgregados.forEach(habitat -> {
            especie.addNombreHabitats(habitat);
            });
            listaCuidadoresAgregados.forEach(cuidador -> {
            especie.addIdCuidadores(cuidador.getId());
            });
        
        fachada.agregarEspecie(especie);
        return true;
        }
    }
    
    public void llenarTablaCuidadores(){
        List<Empleado> listaCuidadores = fachada.consultarCuidadores();
        DefaultTableModel modelo = (DefaultTableModel) this.tblCuidadoresRegistrados.getModel();
        modelo.setRowCount(0);
        listaCuidadores.forEach(cuidador -> {
            Object[] fila = new Object[2];
            fila[0] = cuidador.getId();
            fila[1] = cuidador.getNombre();
            modelo.addRow(fila);
        });
    }
    
    public void llenarTablaCuidadoresEspecies(){
        DefaultTableModel modelo = (DefaultTableModel) this.tblCuidadoresAgregados.getModel();
        modelo.setRowCount(0);
        listaCuidadoresAgregados.forEach(cuidador -> {
            Object[] fila = new Object[2];
            fila[0] = cuidador.getId();
            fila[1] = cuidador.getNombre();
            modelo.addRow(fila);
        });
    }
    
    public void llenarTablaHabitats(){
        List<Habitat> listaHabitats = fachada.consultarHabitats();
        DefaultTableModel modelo = (DefaultTableModel) this.tblHabitatsRegistrados.getModel();
        modelo.setRowCount(0);
        listaHabitats.forEach(habitat -> {
            Object[] fila = new Object[1];
            fila[0] = habitat.getNombre();
            modelo.addRow(fila);
        });
    }
    
    
    public void llenarTablaHabitatsEspecies(){
        DefaultTableModel modelo = (DefaultTableModel) this.tblEspecieHabitats.getModel();
        modelo.setRowCount(0);
        for (int i = 0; i < listaHabitatsAgregados.size(); i++) {
            String[] fila = new String[1];
            fila[0] = listaHabitatsAgregados.get(i);
            modelo.addRow(fila);
        }
    }
    
    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        if(agregarEspecie() == true){
            JOptionPane.showMessageDialog(this, "Especie Registrada");
            limpiarCampos();
        }else{
            return;
        }
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void btnAgregarHabitatEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHabitatEspecieActionPerformed
        if(tblHabitatsRegistrados.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Selecciona un campo de la tabla porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{
            DefaultTableModel modelo = (DefaultTableModel) this.tblHabitatsRegistrados.getModel();
            listaHabitatsAgregados.add((String)tblHabitatsRegistrados.getValueAt(tblHabitatsRegistrados.getSelectedRow(), 0));
            modelo.removeRow(tblHabitatsRegistrados.getSelectedRow());
            llenarTablaHabitatsEspecies();
        }
    }//GEN-LAST:event_btnAgregarHabitatEspecieActionPerformed

    private void btnRemoverHabitatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverHabitatActionPerformed
        if(tblEspecieHabitats.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Selecciona un campo de la tabla porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{
           DefaultTableModel modelo = (DefaultTableModel) this.tblEspecieHabitats.getModel();
            DefaultTableModel modelo2 = (DefaultTableModel) this.tblHabitatsRegistrados.getModel();
            Object[] fila = new Object[1];
            fila[0] = tblEspecieHabitats.getValueAt(tblEspecieHabitats.getSelectedRow(), 0);
            listaHabitatsAgregados.remove((String)tblEspecieHabitats.getValueAt(tblEspecieHabitats.getSelectedRow(), 0));
            modelo.removeRow(tblEspecieHabitats.getSelectedRow());
            modelo2.addRow(fila);
            llenarTablaHabitatsEspecies(); 
        }
        
    }//GEN-LAST:event_btnRemoverHabitatActionPerformed

    private void btnRemoverCuidadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverCuidadorActionPerformed
        Empleado empleado = new Empleado();
        if(tblCuidadoresAgregados.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Selecciona un campo de la tabla porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{
           DefaultTableModel modelo = (DefaultTableModel) this.tblCuidadoresAgregados.getModel();
            DefaultTableModel modelo2 = (DefaultTableModel) this.tblCuidadoresRegistrados.getModel();
            Object[] fila = new Object[2];
            fila[0] = (ObjectId)tblCuidadoresAgregados.getValueAt(tblCuidadoresAgregados.getSelectedRow(), 0);
            fila[1] = (String)tblCuidadoresAgregados.getValueAt(tblCuidadoresAgregados.getSelectedRow(), 1);
            empleado.setId((ObjectId)tblCuidadoresAgregados.getValueAt(tblCuidadoresAgregados.getSelectedRow(), 0));
            empleado.setNombre((String)tblCuidadoresAgregados.getValueAt(tblCuidadoresAgregados.getSelectedRow(), 1));
            listaCuidadoresAgregados.remove(empleado);
            modelo.removeRow(tblCuidadoresAgregados.getSelectedRow());
            modelo2.addRow(fila);
            llenarTablaCuidadoresEspecies();
        }
    }//GEN-LAST:event_btnRemoverCuidadorActionPerformed

    private void btnAgregarCuidadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCuidadorActionPerformed
        if(tblCuidadoresRegistrados.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Selecciona un campo de la tabla porfavor", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{
            Empleado empleado = new Empleado();
            DefaultTableModel modelo = (DefaultTableModel) this.tblCuidadoresRegistrados.getModel();
            empleado.setId((ObjectId)tblCuidadoresRegistrados.getValueAt(tblCuidadoresRegistrados.getSelectedRow(), 0));
            empleado.setNombre((String)tblCuidadoresRegistrados.getValueAt(tblCuidadoresRegistrados.getSelectedRow(), 1));
            listaCuidadoresAgregados.add(empleado);
            modelo.removeRow(tblCuidadoresRegistrados.getSelectedRow());
            llenarTablaCuidadoresEspecies();
        }
    }//GEN-LAST:event_btnAgregarCuidadorActionPerformed

    private void txtNombreVulgarEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreVulgarEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreVulgarEspecieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEspecie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Direccion1;
    private javax.swing.JButton btnAgregarCuidador;
    private javax.swing.JButton btnAgregarHabitatEspecie;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JButton btnRemoverCuidador;
    private javax.swing.JButton btnRemoverHabitat;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblCuidadoresAgregados;
    private javax.swing.JTable tblCuidadoresRegistrados;
    private javax.swing.JTable tblEspecieHabitats;
    private javax.swing.JTable tblHabitatsRegistrados;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombreCientificoEspecie;
    private javax.swing.JTextField txtNombreVulgarEspecie;
    // End of variables declaration//GEN-END:variables
}
